"""–ì–ª–∞–≤–Ω—ã–π –ø—Ä–æ–≥—Ä–∞–º–º–Ω—ã–π –º–æ–¥—É–ª—å"""

import re
import random

from telebot import types, TeleBot, custom_filters

from states import PgStateStorage, UserStates
from yandex import translate_word
from connection_file import DBMS, USER, PASSWORD, HOST, DB_NAME, TOKEN
import work_db as db




engine, session = db.connection_db(DBMS, USER, PASSWORD, HOST, DB_NAME)
state_storage = PgStateStorage(session)
bot = TeleBot(TOKEN, state_storage=state_storage)

def show_target(word_ru, word_en):
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ —Å–ª–æ–≤–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –∏—Ö –∫—Ä–∞—Å–∏–≤—ã–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º"""
    return f"{word_ru} -> {word_en}"

def show_hint(*lines):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑ —Å—Ç—Ä–æ–∫ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω—É 
    —Å—Ç—Ä–æ–∫—É —Å –ø–µ—Ä–µ–Ω–æ—Å–∞–º–∏ –¥–ª—è –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    return '\n'.join(lines)

class Command:
    """–ê—Ç—Ä–∏–±—É—Ç—ã –∫–ª–∞—Å—Å–∞ - —ç—Ç–æ –∫–æ–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–µ—Ç –≤–≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"""
    ADD_WORD = '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï'
    DELETE_WORD = '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æüîô'
    NEXT = '–î–∞–ª—å—à–µ ‚è≠'
    WORKOUT = '–†–µ–∂–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üí™'
    CANCEL = "/cancel"


###–Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['start'])
def start_message(message):
    """–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '/start'. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –Ω–µ–≥–æ –∏–º—è."""
    bot.reply_to(message, '–ü—Ä–∏–≤–µ—Ç üëã')
    bot.send_message(message.chat.id,
    "–ú–µ–Ω—è –∑–æ–≤—É—Ç –ì–æ—à–∞. –Ø —Ç–≥ –±–æ—Ç –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞. –î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è. –ö–∞–∫ —Ç–≤–æ—ë –∏–º—è?")
    db.create_or_change_user(session, message.from_user.id, {})
    bot.set_state(message.from_user.id, UserStates.enter_a_name, message.chat.id)


@bot.message_handler(state=UserStates.enter_a_name)
def create_user(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∑–∞–Ω–æ—Å–∏—Ç –µ–≥–æ –≤ –±–¥ –∏ –≤—ã—Å—ã–ª–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*buttons(5))
    name = message.text
    if len(name) <= 50:
        db.create_or_change_user(session, message.from_user.id, {'name': name})
        bot.send_message(message.chat.id, f'''{name}, –æ—Ç–ª–∏—á–Ω–æ!
–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —è–∑—ã–∫–µ –∏ —Ä–∞—Å—à–∏—Ä—è—Ç—å —Å–≤–æ–π —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å. 
–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤ —É–¥–æ–±–Ω–æ–º –¥–ª—è —Å–µ–±—è —Ç–µ–º–ø–µ.
–ù–∞ –Ω–∞—á–∞–ª—å–Ω–æ–º —ç—Ç–∞–ø–µ —É —Ç–µ–±—è –µ—Å—Ç—å –±–∞–∑–æ–≤—ã–π –Ω–∞–±–æ—Ä, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ 20 —Å–ª–æ–≤.
–ù–æ —Ç—Ä–µ–Ω–∞–∂—ë—Ä - —ç—Ç–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –ø–æ—ç—Ç–æ–º—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–±—Ä–∞—Ç—å —Å–≤–æ—é —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—É—é –±–∞–∑—É –¥–ª—è –æ–±—É—á–µ–Ω–∏—è. –î–ª—è —ç—Ç–æ–≥–æ –≤–æ—Å–ø—Ä–æ–ª—å–∑—É–π—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏:
\n–¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï,
\n—É–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æ üîô.
\n–ù—É —á—Ç–æ, –Ω–∞—á–Ω—ë–º ‚¨áÔ∏è''', reply_markup=markup)
        bot.set_state(message.from_user.id, UserStates.select_a_command)
    else:
        bot.send_message(message.chat_id, '''–û–π-–æ–π. –Ø –Ω–µ –º–æ–≥—É –∑–∞–ø–æ–º–Ω–∏—Ç—å —Ç–∞–∫–æ–µ –¥–ª–∏–Ω–Ω–æ–µ –∏–º—è.
–ü–æ–ø—Ä–æ–±—É–π –µ–≥–æ –Ω–µ–º–Ω–æ–≥–æ —Å–æ–∫—Ä–∞—Ç–∏—Ç—å, –∞ –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤—å –µ—â—ë —Ä–∞–∑)''')

@bot.message_handler(commands=['cancel'])
def create_again(message):
    """–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '/cancel'. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫ —ç—Ç–∞–ø—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
    bot.send_message(message.chat.id, ' –ù—É —á—Ç–æ –∂–µ, –Ω–∞—á–Ω—ë–º –∑–∞–Ω–æ–≤–æ. –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
    bot.set_state(message.from_user.id, UserStates.enter_a_name)


### –±–ª–æ–∫ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
@bot.message_handler(state=UserStates.select_a_command,
func=lambda message: message.text == Command.ADD_WORD)
def add_command(message):
    """–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–î–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–æ ‚ûï'.
    –ó–∞–ø—Ä—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ª–æ–≤–æ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥."""
    bot.send_message(message.chat.id, "–ö–∞–∫–æ–µ —Å–ª–æ–≤–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑—É—á–∏—Ç—å?")
    bot.set_state(message.from_user.id, UserStates.enter_a_new_word)

@bot.message_handler(state=UserStates.enter_a_new_word)
def add_verification(message):
    """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–¥. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥."""
    word = message.text.lower()
    if re.match(r"^[–∞-—è–ê-–Ø]*$", word) or re.match(r"^[a-zA-Z]*$", word):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item1 = types.KeyboardButton('–•–æ—á—É –¥–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ –≤–∞–º')
        markup.add(item1)
        bot.send_message(message.chat.id,
        f"–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–µ–≤–æ–¥ –¥–ª—è —Å–ª–æ–≤–∞ '{word}'.", reply_markup=markup)
        bot.set_state(message.from_user.id, UserStates.enter_a_translation)
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['target_word'] = word
            data['language'] = 'ru' if re.match(r'^[–∞-—è–ê-–Ø]', word) else 'en'

    else:
        bot.send_message(message.chat.id,
        f'''–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å–ª–æ–≤–æ '{word}'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å. 
–ü—Ä–∏ –≤–≤–æ–¥–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∏–ª–∏ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤ –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤''', reply_markup=buttons(2))
        bot.set_state(message.from_user.id, UserStates.select_a_command)

@bot.message_handler(state=UserStates.enter_a_translation)
def add(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ –∏ –∑–∞–Ω–æ—Å–∏—Ç –ø–∞—Ä—É —Å–ª–æ–≤ –≤ –±–¥"""
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        language = data['language']
        word = data['target_word']
    ans = message.text.lower()
    if ans == '—Ö–æ—á—É –¥–æ–≤–µ—Ä–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ –≤–∞–º':
        ans = translate_word(word, 'ru-en') if language == 'ru' else translate_word(word, 'en-ru')
        if ans is None:
            bot.send_message(message.chat.id,
    f'''–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –ø–µ—Ä–µ–≤–æ–¥–∞ –¥–ª—è —Å–ª–æ–≤–∞: "{word}".
–ü—Ä–æ–≤–µ—Ä—Ç–µ, —á—Ç–æ –æ–Ω–æ –±—ã–ª–æ –≤–≤–µ–¥–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ, –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑. –í—ã —Ç–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ''',
    reply_markup=buttons(2))
        else:
            if language != 'ru':
                word, ans = ans, word
            status = db.add_card(session, message.from_user.id, word, ans)
            if status:
                rows = db.count_rows(session, message.from_user.id)
                bot.send_message(message.chat.id,
        f'''–ü–∞—Ä–∞ —Å–ª–æ–≤ "{word}-{ans}" –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä—å.
        –°–ª–æ–≤ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ: {rows}''', reply_markup=buttons(2))
            else:
                bot.send_message(message.chat.id,
        f'–ü–∞—Ä–∞ —Å–ª–æ–≤ "{word}-{ans}" —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ', reply_markup=buttons(2))
    else:
        if re.match(r"^[–∞-—è–ê-–Ø]*$", ans) or re.fullmatch(r"^[a-zA-Z]*$", ans):
            lan = 'ru' if re.match(r'^[–∞-—è–ê-–Ø]', ans) else 'en'
            if lan != language:
                if language != 'ru':
                    word, ans = ans, word
                status = db.add_card(session, message.from_user.id, word, ans)
                if status:
                    rows = db.count_rows(session, message.from_user.id)
                    bot.send_message(message.chat.id,
        f'''–ü–∞—Ä–∞ —Å–ª–æ–≤ "{word}-{ans}" –±—ã–ª–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä—å.
        –°–ª–æ–≤ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ: {rows}''', reply_markup=buttons(2))
                else:
                    bot.send_message(message.chat.id,
        f'–ü–∞—Ä–∞ —Å–ª–æ–≤ "{word}-{ans}" —É–∂–µ –µ—Å—Ç—å –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ', reply_markup=buttons(2))
            else:
                bot.send_message(message.chat.id,
            f'''–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —Å–ª–æ–≤–∞ –∏–∑ –ø–∞—Ä—ã "{word}-{ans}" –≤–≤–µ–¥–µ–Ω—ã –Ω–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —è–∑—ã–∫–∞—Ö. 
–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–∞–∫–æ–π –ø–∞—Ä—ã —Å–ª–æ–≤ –≤ –≤–∞—à —Å–ª–æ–≤–∞—Ä—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –≤–≤–µ–¥—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ø—Ä–æ–±—É–π–¥–µ –ø—Ä–æ–¥–µ–ª–∞—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é –µ—â—ë —Ä–∞–∑''', 
                reply_markup=buttons(2))
        else:
            bot.send_message(message.chat.id,
            f'''–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ —è –Ω–µ –º–æ–≥—É —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å–ª–æ–≤–æ '{ans}'. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ–≥–æ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å.
–ü—Ä–∏ –≤–≤–æ–¥–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –∏–ª–∏ —Ä—É—Å—Å–∫–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–æ–≤ –±–µ–∑ –∫–∞–∫–∏—Ö-–ª–∏–±–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤''',
            reply_markup=buttons(2))
    bot.set_state(message.from_user.id, UserStates.select_a_command)


### –±–ª–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏
@bot.message_handler(state=UserStates.select_a_command,
func=lambda message: message.text == Command.DELETE_WORD)
def dell_command(message):
    """–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã '–£–¥–∞–ª–∏—Ç—å —Å–ª–æ–≤–æüîô'. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–ª–æ–≤–æ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ."""
    bot.send_message(message.chat.id,
    '–í–≤–µ–¥–∏—Ç–µ —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å(–Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏–ª–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)')
    bot.set_state(message.from_user.id, UserStates.enter_dell_word)

@bot.message_handler(state=UserStates.enter_dell_word)
def dell_word(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ª–æ–≤–æ –∏ —É–¥–∞–ª—è–µ—Ç –µ–≥–æ –∏–∑ –±–¥"""
    ans = message.text.lower()
    res = db.dell_word(session, message.from_user.id, ans)
    if res:
        bot.send_message(message.chat.id,
        f'–°–ª–æ–≤–æ "{ans}" –±—ã–ª–æ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –≤–∞—à–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è', reply_markup=buttons(2))
    else:
        bot.send_message(message.chat.id,
        f'–°–ª–æ–≤–æ "{ans}" –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ', reply_markup=buttons(2))
    bot.set_state(message.from_user.id, UserStates.select_a_command)

### —Ä–µ–∂–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
@bot.message_handler(state=UserStates.select_a_command,
func=lambda message: message.text in {Command.WORKOUT, Command.NEXT})
def workout_command(message):
    """–§—É–Ω–∫—Ü–∏—è-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ '–î–∞–ª—å—à–µ ‚è≠' –∏ '–†–µ–∂–∏–º —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üí™'.
    –ë–µ—Ä—ë—Ç –∏–∑ –±–¥ 4 —Å–ª–æ–≤–∞ –∏ –≤—ã–¥–∞—ë—Ç –∏ –≤—ã–¥–∞—ë—Ç –∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é."""
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    words = db.get_set_words(session, message.from_user.id)
    if words:
        random_word = random.choice(words)
        target_word = random_word[0]
        translate_word = random_word[1]
        memor_word = random_word[2]
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['target_word'] = target_word
            data['translate_word'] = translate_word
            data['memor_word'] = memor_word
            data['other_words'] = [i[1] for i in words]
        random.shuffle(words)
        buttoms = [types.KeyboardButton(i[1]) for i in words]
        markup.add(*buttoms[:2], row_width=2)
        markup.add(*buttoms[2:], row_width=2)
        markup.add(*buttons(3))
        greeting = f"–í—ã–±–µ—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞: {target_word}"
        bot.send_message(message.chat.id, greeting, reply_markup=markup)
        bot.set_state(message.from_user.id, UserStates.choose_a_translation, message.chat.id)
    else:
        bot.send_message(message.chat.id, f'''–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –¥–ª—è —Ä–µ–∂–∏–º–∞ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –≤–∞—à–µ–º —Å–ª–æ–≤–∞—Ä–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ 4 —Å–ª–æ–≤.
–°–æ–≤–µ—Ç—É–µ–º –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–æ–º–∞–Ω–¥–æ–π "{Command.ADD_WORD}", —á—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å —Å–ª–æ–≤–∞.''', reply_markup=markup)
        bot.set_state(message.from_user.id, UserStates.select_a_command, message.chat.id)

@bot.message_handler(state=UserStates.choose_a_translation,
func=lambda message: True, content_types=['text'])
def message_reply(message):
    """–§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ—Ç–≤–µ—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç(–ø—Ä–∞–≤–∏–ª—å–Ω–æ/–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)"""
    text = message.text
    markup = types.ReplyKeyboardMarkup(row_width=2)
    with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
        target_word = data['target_word']
        translate_word = data['translate_word']
        other_words = data['other_words']
        memor_word = data['memor_word']
    if text == translate_word:
        hint = show_target(target_word, translate_word)
        hint_text = ["–û—Ç–ª–∏—á–Ω–æ!‚ù§", hint]
        markup = buttons(4)
        hint = show_hint(*hint_text)
        if memor_word < 100:
            memor_word += 1
        db.save_memor(session, message.from_user.id, memor_word, translate_word)
        bot.set_state(message.from_user.id, UserStates.select_a_command, message.chat.id)
    else:
        for i, word in enumerate(other_words):
            if word == text:
                other_words[i] = text + '‚ùå'
                break
        buttoms = []
        buttoms = [types.KeyboardButton(i) for i in other_words]
        markup.add(*buttoms)
        hint = show_hint("–î–æ–ø—É—â–µ–Ω–∞ –æ—à–∏–±–∫–∞!",
        f"–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –≤—Å–ø–æ–º–Ω–∏—Ç—å —Å–ª–æ–≤–æ {data['target_word']}")
        if memor_word > 0:
            memor_word -= 1
        with bot.retrieve_data(message.from_user.id, message.chat.id) as data:
            data['memor_word'] = memor_word
            data['other_words'] = other_words
    bot.send_message(message.chat.id, hint, reply_markup=markup)

bot.add_custom_filter(custom_filters.StateFilter(bot))


def buttons(flag):
    """–§—É–Ω–∫—Ü–∏—è, –≥–µ–Ω–µ—Ä–∏—Ä—É—é—â–∞—è —Ç–≥ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
    if flag == 1:
        but = []
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        next_btn = types.KeyboardButton(Command.NEXT)
        add_word_btn = types.KeyboardButton(Command.ADD_WORD)
        delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
        wrk = types.KeyboardButton(Command.WORKOUT)
        but.extend([next_btn, add_word_btn, delete_word_btn, wrk])
        markup.add(*but)
        return markup
    if flag == 2:
        but = []
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        add_word_btn = types.KeyboardButton(Command.ADD_WORD)
        delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
        wrk = types.KeyboardButton(Command.WORKOUT)
        but.extend([add_word_btn, delete_word_btn, wrk])
        markup.add(*but)
        return markup
    if flag == 3:
        but = []
        add_word_btn = types.KeyboardButton(Command.ADD_WORD)
        delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
        next_btn = types.KeyboardButton(Command.NEXT)
        but.extend([next_btn, add_word_btn, delete_word_btn])
        return but
    if flag == 4:
        but = []
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        next_btn = types.KeyboardButton(Command.NEXT)
        add_word_btn = types.KeyboardButton(Command.ADD_WORD)
        delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
        but.extend([next_btn, add_word_btn, delete_word_btn])
        markup.add(*but)
        return markup
    but = []
    add_word_btn = types.KeyboardButton(Command.ADD_WORD)
    delete_word_btn = types.KeyboardButton(Command.DELETE_WORD)
    wrk = types.KeyboardButton(Command.WORKOUT)
    canc = types.KeyboardButton(Command.CANCEL)
    but.extend([add_word_btn, delete_word_btn, wrk, canc])
    return but

if __name__ == '__main__':
    print('Bot is running!')
    db.create_table(engine)
    db.completion(session)
    bot.polling()
